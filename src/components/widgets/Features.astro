---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import Button from '~/components/ui/Button.astro';
import { Icon } from 'astro-icon/components';
import { Icon } from 'astro-icon/components';
import type { Features as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 2,

  defaultIcon,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-5xl ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <div class="modern-grid-3">
    {items && items.map((item, index) => (
      <div class={`modern-card p-6 intersect-once intersect-quarter motion-safe:opacity-0 motion-safe:intersect:animate-slide-up`} style={`animation-delay: ${(index + 1) * 0.1}s`}>
        <div class="flex items-start space-x-4">
          <div class="icon-container-large flex-shrink-0 bg-primary-500/20 border-primary-500/30">
            <Icon name={item.icon || defaultIcon} class="w-8 h-8 text-primary-400" />
          </div>
          <div class="flex-1">
            <h3 class="text-xl font-semibold text-white mb-3">{item.title}</h3>
            <p class="text-slate-300 leading-relaxed" set:html={item.description} />
            {item.callToAction && (
              <div class="mt-4">
                <Button variant="link" {...item.callToAction} class="text-primary-400 hover:text-primary-300" />
              </div>
            )}
          </div>
        </div>
      </div>
    ))}
  </div>
</WidgetWrapper>
