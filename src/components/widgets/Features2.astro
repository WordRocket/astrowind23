---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import ItemGrid2 from '~/components/ui/ItemGrid2.astro';
import type { Features as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  columns = 3,
  defaultIcon,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
  <div class="modern-grid">
    {items && items.map((item, index) => (
      <div class={`modern-card p-8 text-center intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-scale-in stagger-${Math.min(index + 1, 6)}`}>
        <div class="icon-container-large mx-auto mb-6">
          <Icon name={item.icon || defaultIcon} class="w-8 h-8 text-primary-400" />
        </div>
        <h3 class="text-xl font-semibold text-white mb-4">{item.title}</h3>
        <p class="text-slate-300 leading-relaxed mb-6" set:html={item.description} />
        {item.callToAction && (
          <Button variant="link" {...item.callToAction} class="text-primary-400 hover:text-primary-300 font-medium" />
        )}
      </div>
    ))}
  </div>
</WidgetWrapper>
