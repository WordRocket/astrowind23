---
import { Icon } from 'astro-icon/components';
import Button from '~/components/ui/Button.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Pricing as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  prices = [],

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />
  <div class="flex items-stretch justify-center max-w-4xl mx-auto">
    <div class="grid grid-cols-1 gap-8 w-full">
      {
        prices &&
          prices.map(({ title, subtitle, price, period, items, callToAction, hasRibbon = false, ribbonTitle }) => (
            <div class="mx-auto flex w-full animate-scale-in">
              {price && period && (
                <div class={`pricing-card ${hasRibbon ? 'featured' : ''} flex w-full flex-col justify-between text-center relative`}>
                  {hasRibbon && ribbonTitle && (
                    <div class="absolute -top-3 -right-3 z-10">
                      <span class="badge-beta animate-pulse-glow">
                        {ribbonTitle}
                      </span>
                    </div>
                  )}
                  <div class="px-4 py-4">
                    {title && (
                      <h3 class="text-center text-2xl font-bold uppercase leading-6 tracking-wider mb-4 text-white">{title}</h3>
                    )}
                    {subtitle && <p class="font-medium text-lg text-slate-300 mb-6">{subtitle}</p>}
                    <div class="my-12">
                      <div class="flex items-center justify-center text-center mb-2">
                        <span class="text-6xl font-bold gradient-text">$</span>
                        <span class="text-7xl font-extrabold gradient-text">{price}</span>
                      </div>
                      <span class="text-lg leading-6 text-slate-400">{period}</span>
                    </div>
                    {items && (
                      <ul class="my-8 md:my-10 space-y-4 text-left">
                        {items.map(
                          ({ description, icon }) =>
                            description && (
                              <li class="flex items-start space-x-3 leading-7">
                                <div class="icon-container bg-success/20 border-success/30 mt-0.5 flex-shrink-0">
                                  <Icon name={icon ? icon : 'tabler:check'} class="w-4 h-4 text-success" />
                                </div>
                                <span class="text-slate-300 font-medium">{description}</span>
                              </li>
                            )
                        )}
                      </ul>
                    )}
                  </div>
                  {callToAction && (
                    <div class="flex justify-center mt-8">
                      {typeof callToAction === 'string' ? (
                        <Fragment set:html={callToAction} />
                      ) : (
                        callToAction &&
                        callToAction.href && <Button {...callToAction} class="btn-modern w-full py-4 text-lg font-semibold" />
                      )}
                    </div>
                  )}
                </div>
              )}
            </div>
          ))
      }
    </div>
  </div>
</WidgetWrapper>
