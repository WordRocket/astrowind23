---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
    {
      testimonials &&
        testimonials.map(({ title, testimonial, name, job, image }) => (
          <div class="flex h-auto intersect-once motion-safe:intersect:animate-slide-up motion-safe:opacity-0 intersect-quarter">
            <div class="testimonial-card flex flex-col w-full">
              {title && <h3 class="text-xl font-semibold leading-6 pb-4 text-white">{title}</h3>}
              {testimonial && (
                <blockquote class="flex-auto mb-6">
                  <p class="text-slate-300 text-lg leading-relaxed italic">" {testimonial} "</p>
                </blockquote>
              )}

              <div class="flex items-center mt-auto">
                {image && (
                  <div class="h-12 w-12 rounded-full border-2 border-primary-500/30 overflow-hidden">
                    {typeof image === 'string' ? (
                      <Fragment set:html={image} />
                    ) : (
                      <Image
                        class="h-12 w-12 rounded-full object-cover"
                        width={48}
                        height={48}
                        widths={[400, 768]}
                        layout="fixed"
                        {...image}
                      />
                    )}
                  </div>
                )}

                <div class="grow ml-4 rtl:ml-0 rtl:mr-4">
                  {name && <p class="text-base font-semibold text-white">{name}</p>}
                  {job && <p class="text-sm text-slate-400">{job}</p>}
                </div>
              </div>
            </div>
          </div>
        ))
    }
  </div>
  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
